
services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ap_user
      - POSTGRES_PASSWORD=ap_password
      - POSTGRES_DB=activepieces
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [apnet]
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks: [apnet]
  activepieces-core:
    build: external/activepieces/docker/core
    ports: ["8080:8080"]
    depends_on: [postgres, redis]
    environment:
      - AP_DB_HOST=postgres
      - AP_DB_PORT=5432
      - AP_DB_USERNAME=ap_user
      - AP_DB_PASSWORD=ap_password
      - REDIS_HOST=redis
    env_file: .env
    networks: [apnet]
  activepieces-ui:
    build: external/activepieces/docker/ui
    ports: ["3000:3000"]
    environment:
      - AP_API_URL=http://activepieces-core:8080
    depends_on: [activepieces-core]
    networks: [apnet]
  phoenix:
    image: arizephoenix/phoenix:latest   
    container_name: phoenix
    restart: unless-stopped          
    networks: [apnet]
    ports:
      - "6006:6006"
    env_file:
      - .env
  server:
    build:
      context: .
    image: langserve_launch_example:latest
    container_name: langserve_launch_example
    restart: unless-stopped          
    networks: [apnet]                    
    ports:
      - "8001:8001"
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:

networks:
  apnet:
    driver: bridge      
